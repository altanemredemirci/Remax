@using Microsoft.AspNetCore.SignalR;
@using Remax.BLL.DTOs.TodoListDTO;
@model List<ResultTodoListDTO>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>


<div class="col-md-4">
    <div class="card">
        <div class="card-header ui-sortable-handle" style="cursor: move;">
            <h3 class="card-title">
                <i class="ion ion-clipboard mr-1"></i>
                To Do List
            </h3>
            <div class="card-tools">
            </div>

        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <ul class="todo-list ui-sortable" data-widget="todo-list" id="todoList">
                <!-- SignalR kütüphanesi ile bu alan dolduruluyor-->
                @for (int i = 0; i < Model.Count; i++)
                {
                    <li class="done">
                        <span class="handle ui-sortable-handle">
                            <i class="fas fa-ellipsis-v"></i>
                            <i class="fas fa-ellipsis-v"></i>
                        </span>
                        <div class="icheck-primary d-inline ml-2">
                            <input type="checkbox" value="" name="todo@(i+1)" id="todoCheck@(i+1)" @(Model[i].Status ? "checked":"")>
                            <label for="todoCheck@(i+1)"></label>
                        </div>
                        <span class="text">@Model[i].Description</span>
                        <small class="badge badge-info"><i class="far fa-clock"></i> @(DateTime.Now.Day - Model[i].AddDate.Day) gün</small>
                        <div class="tools">
                            <a asp-action="Delete" asp-controller="Todo" asp-route-id="@Model[i].Id"> <i class="fas fa-trash"></i></a>
                        </div>
                    </li>
                }



            </ul>
            <div class="card-footer clearfix">
                <button type="button" class="btn btn-primary btn-sm float-right" data-toggle="modal" data-target="#exampleModal"><i class="fas fa-plus"></i> Ekle</button>
            </div>
        </div>

    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Todo Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
              <form action="/Todo/Create" method="post">
                    <div class="form-group">
                        <label>Açıklama</label>
                        <input type="text" class="form-control" name="description" />
                    </div>
                    <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                            <button type="submit" class="btn btn-primary">Kaydet</button>
                        </div>
                </form>
            </div>
           
        </div>
    </div>
</div>





<script>
    $(document).ready(() => {
        var connection = new signalR.HubConnectionBuilder().withUrl("http://localhost:5229/SignalRHub").build();
        $("#connstatus").text(connection.state);

        connection.start().then(() => {
            $("#connstatus").text(connection.state);
            setInterval(() => {
                connection.invoke("SendTodoList");
            }, 1000);

        }).catch((err) => { console.log(err) });

        // Sunucudan gelen "To Do List" değerlerini işleme
        connection.on("ReceiveTodoList", (todoList) => {
            // "To Do List" içeriğini güncelleme
            updateTodoList(todoList);
        });

        // "To Do List" içeriğini güncelleme fonksiyonu
        function updateTodoList(todoList) {
            // "To Do List" içeriğini temizleme
            $("#todoList").empty();
            // Yeni "To Do List" içeriğini oluşturma
            todoList.forEach((todo, index) => {
                var listItem = `<li class="${todo.status ? "done" : ""}">
                                            <span class="handle ui-sortable-handle">
                                                <i class="fas fa-ellipsis-v"></i>
                                                <i class="fas fa-ellipsis-v"></i>
                                            </span>
                                            <div class="icheck-primary d-inline ml-2">
                                                            <input type="checkbox" value="" name="todo${index + 1}" id="todoCheck${index + 1}" ${todo.status ? "checked" : ""} onchange="statusChange(${todo.id})">
                                                <label for="todoCheck${index + 1}"></label>
                                            </div>
                                            <span class="text">${todo.description}</span>
                                            <small class="badge badge-danger"><i class="far fa-clock"></i> ${calculateDays(todo.addDate)}</small>
                                            <div class="tools">
                                                <a href="/Todo/Delete/${todo.id}"><i class="fas fa-trash"></i></a>
                                            </div>
                                        </li>`;
                // Yeni "To Do List" öğelerini ekleme
                $("#todoList").append(listItem);
            });
        }

        // Görevin eklenme tarihini hesaplayan fonksiyon
        function calculateDays(addDate) {
            var today = new Date();
            var month = today.getMonth() - new Date(addDate).getMonth();
            var difference = today.getDate() - new Date(addDate).getDate();
            return ((month * 30) + difference) + " gün";
        }



    });


    // Şehir seçildiğinde ilçelerin dinamik olarak yüklenmesi
    function statusChange(id) {

        // AJAX çağrısı
        $.ajax({
            url: '/TodoList/StatusChange',
            type: 'GET',
            data: { "id": id },
            success: function (data) {

            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    };


</script>